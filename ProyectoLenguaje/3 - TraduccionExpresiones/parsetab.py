
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS COLON COMMA DIM DIV DO ELSE EQ EQUAL FLOAT FOR GE GT ID IF IN INT LBRACK LCURL LE LET LPAREN LT MAT MINUS MULT NE NFLOAT NINT NOT OR PEND PLUS PRINT PROGRAM RBRACK RCURL RPAREN SUBEND SUBPROCEDURE VEC WHILE\n    START : PROGRAM V P S PEND\n    \n    V : DIM VARAUX V\n    \n    V : LET VARASSIGN V S\n    \n    V : EMPTY\n    \n    P : SUBPROCEDURE LPAREN ID RPAREN V P S SUBEND\n    \n    P : IN LPAREN NUMTYPE RPAREN S\n    \n    P : PRINT LPAREN NUMTYPE RPAREN S\n    \n    P : EMPTY\n    \n    S : IF LPAREN LOGE RPAREN LCURL V S RCURL IFELSE S\n    \n    IFELSE : ELSE LCURL S RCURL\n    |\n    \n    S : WHILE LPAREN LOGE RPAREN LCURL V S RCURL S\n    \n    S : DO COLON V S WHILE LPAREN LOGE RPAREN S\n    \n    S : FOR LPAREN LOGE COMMA LOGE RPAREN LCURL V S RCURL\n    \n    S : E\n    \n    S : EMPTY\n    \n    VARAUX : ID AS VARTYPE\n    \n    VARID : ID\n    \n    VARASSIGN : VARID EQUAL E\n    \n    VARTYPE : INT\n    | FLOAT\n    | VECDEF\n    | MATDEF\n    \n    NUMTYPE : ID\n    | NINT\n    | NFLOAT\n    \n    VAR : NINT\n    | NFLOAT\n    | VECTOR\n    | MATRIX\n    | ID\n    \n    VECDEF : VEC LBRACK VAR RBRACK\n    \n    MATDEF : MAT LBRACK VAR RBRACK LBRACK VAR RBRACK\n    \n    VECTOR : ID LBRACK NUMTYPE RBRACK\n    \n    MATRIX : ID LBRACK NUMTYPE COMMA NUMTYPE RBRACK\n    \n    EMPTY : \n    \n    E : E PLUS T\n    | E MINUS T\n    \n    E : T\n    \n    T : T MULT F\n    | T DIV F\n    \n    T : F\n    \n    F : LPAREN E RPAREN\n    \n    F : NINT\n    | NFLOAT\n    | VECTOR\n    | MATRIX\n    | ID\n    \n    LOGE : LOGE OR LOGT\n    \n    LOGE : NOT LOGT\n    | LOGT\n    \n    LOGT : LOGT AND LOGF\n    \n    LOGT : LOGF\n    \n    LOGF : VAR LT VAR\n    \n    LOGF : VAR LE VAR\n    \n    LOGF : VAR GT VAR\n    \n    LOGF : VAR GE VAR\n    \n    LOGF : VAR EQ VAR\n    \n    LOGF : VAR NE VAR\n    \n    LOGF : LPAREN LOGE RPAREN\n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,39,],[0,-1,]),'DIM':([2,12,14,25,26,27,28,29,30,31,43,56,57,58,59,60,64,76,80,81,82,83,85,104,112,121,126,132,138,145,],[4,4,4,-39,-42,-44,-45,-46,-47,-48,4,-17,-20,-21,-22,-23,-19,-43,-37,-38,-40,-41,4,-34,4,4,-32,-35,4,-33,]),'LET':([2,12,14,25,26,27,28,29,30,31,43,56,57,58,59,60,64,76,80,81,82,83,85,104,112,121,126,132,138,145,],[5,5,5,-39,-42,-44,-45,-46,-47,-48,5,-17,-20,-21,-22,-23,-19,-43,-37,-38,-40,-41,5,-34,5,5,-32,-35,5,-33,]),'SUBPROCEDURE':([2,3,6,12,14,23,24,25,26,27,28,29,30,31,35,37,56,57,58,59,60,63,64,76,80,81,82,83,85,104,106,126,132,141,142,143,145,146,148,149,151,153,155,],[-36,8,-4,-36,-36,-15,-16,-39,-42,-44,-45,-46,-47,-48,-2,-36,-17,-20,-21,-22,-23,-3,-19,-43,-37,-38,-40,-41,-36,-34,8,-32,-35,-11,-36,-36,-33,-36,-12,-13,-9,-14,-10,]),'IN':([2,3,6,12,14,23,24,25,26,27,28,29,30,31,35,37,56,57,58,59,60,63,64,76,80,81,82,83,85,104,106,126,132,141,142,143,145,146,148,149,151,153,155,],[-36,9,-4,-36,-36,-15,-16,-39,-42,-44,-45,-46,-47,-48,-2,-36,-17,-20,-21,-22,-23,-3,-19,-43,-37,-38,-40,-41,-36,-34,9,-32,-35,-11,-36,-36,-33,-36,-12,-13,-9,-14,-10,]),'PRINT':([2,3,6,12,14,23,24,25,26,27,28,29,30,31,35,37,56,57,58,59,60,63,64,76,80,81,82,83,85,104,106,126,132,141,142,143,145,146,148,149,151,153,155,],[-36,10,-4,-36,-36,-15,-16,-39,-42,-44,-45,-46,-47,-48,-2,-36,-17,-20,-21,-22,-23,-3,-19,-43,-37,-38,-40,-41,-36,-34,10,-32,-35,-11,-36,-36,-33,-36,-12,-13,-9,-14,-10,]),'IF':([2,3,6,7,11,12,14,23,24,25,26,27,28,29,30,31,35,37,43,56,57,58,59,60,63,64,76,78,80,81,82,83,85,86,87,104,106,107,108,112,121,125,126,128,129,132,138,139,141,142,143,144,145,146,148,149,151,152,153,155,],[-36,-36,-4,18,-8,-36,-36,-15,-16,-39,-42,-44,-45,-46,-47,-48,-2,18,-36,-17,-20,-21,-22,-23,-3,-19,-43,18,-37,-38,-40,-41,-36,18,18,-34,-36,-6,-7,-36,-36,18,-32,18,18,-35,-36,-5,-11,18,18,18,-33,18,-12,-13,-9,18,-14,-10,]),'WHILE':([2,3,6,7,11,12,14,23,24,25,26,27,28,29,30,31,35,37,43,56,57,58,59,60,63,64,76,78,80,81,82,83,85,86,87,102,104,106,107,108,112,121,125,126,128,129,132,138,139,141,142,143,144,145,146,148,149,151,152,153,155,],[-36,-36,-4,20,-8,-36,-36,-15,-16,-39,-42,-44,-45,-46,-47,-48,-2,20,-36,-17,-20,-21,-22,-23,-3,-19,-43,20,-37,-38,-40,-41,-36,20,20,122,-34,-36,-6,-7,-36,-36,20,-32,20,20,-35,-36,-5,-11,20,20,20,-33,20,-12,-13,-9,20,-14,-10,]),'DO':([2,3,6,7,11,12,14,23,24,25,26,27,28,29,30,31,35,37,43,56,57,58,59,60,63,64,76,78,80,81,82,83,85,86,87,104,106,107,108,112,121,125,126,128,129,132,138,139,141,142,143,144,145,146,148,149,151,152,153,155,],[-36,-36,-4,21,-8,-36,-36,-15,-16,-39,-42,-44,-45,-46,-47,-48,-2,21,-36,-17,-20,-21,-22,-23,-3,-19,-43,21,-37,-38,-40,-41,-36,21,21,-34,-36,-6,-7,-36,-36,21,-32,21,21,-35,-36,-5,-11,21,21,21,-33,21,-12,-13,-9,21,-14,-10,]),'FOR':([2,3,6,7,11,12,14,23,24,25,26,27,28,29,30,31,35,37,43,56,57,58,59,60,63,64,76,78,80,81,82,83,85,86,87,104,106,107,108,112,121,125,126,128,129,132,138,139,141,142,143,144,145,146,148,149,151,152,153,155,],[-36,-36,-4,22,-8,-36,-36,-15,-16,-39,-42,-44,-45,-46,-47,-48,-2,22,-36,-17,-20,-21,-22,-23,-3,-19,-43,22,-37,-38,-40,-41,-36,22,22,-34,-36,-6,-7,-36,-36,22,-32,22,22,-35,-36,-5,-11,22,22,22,-33,22,-12,-13,-9,22,-14,-10,]),'LPAREN':([2,3,6,7,8,9,10,11,12,14,18,19,20,22,23,24,25,26,27,28,29,30,31,35,37,38,40,42,43,44,45,46,47,48,56,57,58,59,60,63,64,65,68,76,78,80,81,82,83,85,86,87,92,93,103,104,106,107,108,112,121,122,125,126,128,129,130,132,138,139,141,142,143,144,145,146,148,149,151,152,153,155,],[-36,-36,-4,19,32,33,34,-8,-36,-36,40,19,42,44,-15,-16,-39,-42,-44,-45,-46,-47,-48,-2,19,19,65,65,-36,65,19,19,19,19,-17,-20,-21,-22,-23,-3,-19,65,65,-43,19,-37,-38,-40,-41,-36,19,19,65,65,65,-34,-36,-6,-7,-36,-36,130,19,-32,19,19,65,-35,-36,-5,-11,19,19,19,-33,19,-12,-13,-9,19,-14,-10,]),'NINT':([2,3,6,7,11,12,14,19,23,24,25,26,27,28,29,30,31,33,34,35,37,38,40,42,43,44,45,46,47,48,49,56,57,58,59,60,63,64,65,68,76,78,80,81,82,83,85,86,87,88,89,92,93,95,96,97,98,99,100,103,104,105,106,107,108,112,121,125,126,128,129,130,132,134,138,139,141,142,143,144,145,146,148,149,151,152,153,155,],[-36,-36,-4,27,-8,-36,-36,27,-15,-16,-39,-42,-44,-45,-46,-47,-48,53,53,-2,27,27,71,71,-36,71,27,27,27,27,53,-17,-20,-21,-22,-23,-3,-19,71,71,-43,27,-37,-38,-40,-41,-36,27,27,71,71,71,71,71,71,71,71,71,71,71,-34,53,-36,-6,-7,-36,-36,27,-32,27,27,71,-35,71,-36,-5,-11,27,27,27,-33,27,-12,-13,-9,27,-14,-10,]),'NFLOAT':([2,3,6,7,11,12,14,19,23,24,25,26,27,28,29,30,31,33,34,35,37,38,40,42,43,44,45,46,47,48,49,56,57,58,59,60,63,64,65,68,76,78,80,81,82,83,85,86,87,88,89,92,93,95,96,97,98,99,100,103,104,105,106,107,108,112,121,125,126,128,129,130,132,134,138,139,141,142,143,144,145,146,148,149,151,152,153,155,],[-36,-36,-4,28,-8,-36,-36,28,-15,-16,-39,-42,-44,-45,-46,-47,-48,54,54,-2,28,28,72,72,-36,72,28,28,28,28,54,-17,-20,-21,-22,-23,-3,-19,72,72,-43,28,-37,-38,-40,-41,-36,28,28,72,72,72,72,72,72,72,72,72,72,72,-34,54,-36,-6,-7,-36,-36,28,-32,28,28,72,-35,72,-36,-5,-11,28,28,28,-33,28,-12,-13,-9,28,-14,-10,]),'ID':([2,3,4,5,6,7,11,12,14,19,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,40,42,43,44,45,46,47,48,49,56,57,58,59,60,63,64,65,68,76,78,80,81,82,83,85,86,87,88,89,92,93,95,96,97,98,99,100,103,104,105,106,107,108,112,121,125,126,128,129,130,132,134,138,139,141,142,143,144,145,146,148,149,151,152,153,155,],[-36,-36,13,16,-4,31,-8,-36,-36,31,-15,-16,-39,-42,-44,-45,-46,-47,-48,50,52,52,-2,31,31,75,75,-36,75,31,31,31,31,52,-17,-20,-21,-22,-23,-3,-19,75,75,-43,31,-37,-38,-40,-41,-36,31,31,75,75,75,75,75,75,75,75,75,75,75,-34,52,-36,-6,-7,-36,-36,31,-32,31,31,75,-35,75,-36,-5,-11,31,31,31,-33,31,-12,-13,-9,31,-14,-10,]),'PEND':([2,3,6,7,11,12,14,17,23,24,25,26,27,28,29,30,31,35,37,56,57,58,59,60,63,64,76,80,81,82,83,86,87,104,107,108,126,132,139,141,142,143,145,146,148,149,151,153,155,],[-36,-36,-4,-36,-8,-36,-36,39,-15,-16,-39,-42,-44,-45,-46,-47,-48,-2,-36,-17,-20,-21,-22,-23,-3,-19,-43,-37,-38,-40,-41,-36,-36,-34,-6,-7,-32,-35,-5,-11,-36,-36,-33,-36,-12,-13,-9,-14,-10,]),'SUBEND':([6,11,12,14,23,24,25,26,27,28,29,30,31,35,37,56,57,58,59,60,63,64,76,80,81,82,83,85,86,87,104,106,107,108,125,126,132,133,139,141,142,143,145,146,148,149,151,153,155,],[-4,-8,-36,-36,-15,-16,-39,-42,-44,-45,-46,-47,-48,-2,-36,-17,-20,-21,-22,-23,-3,-19,-43,-37,-38,-40,-41,-36,-36,-36,-34,-36,-6,-7,-36,-32,-35,139,-5,-11,-36,-36,-33,-36,-12,-13,-9,-14,-10,]),'RCURL':([6,12,14,23,24,25,26,27,28,29,30,31,35,37,56,57,58,59,60,63,64,76,80,81,82,83,104,112,121,126,128,129,132,135,136,138,141,142,143,144,145,146,148,149,150,151,152,153,154,155,],[-4,-36,-36,-15,-16,-39,-42,-44,-45,-46,-47,-48,-2,-36,-17,-20,-21,-22,-23,-3,-19,-43,-37,-38,-40,-41,-34,-36,-36,-32,-36,-36,-35,141,142,-36,-11,-36,-36,-36,-33,-36,-12,-13,153,-9,-36,-14,155,-10,]),'AS':([13,],[36,]),'EQUAL':([15,16,],[38,-18,]),'COLON':([21,],[43,]),'PLUS':([23,25,26,27,28,29,30,31,41,64,76,80,81,82,83,104,132,],[45,-39,-42,-44,-45,-46,-47,-48,45,45,-43,-37,-38,-40,-41,-34,-35,]),'MINUS':([23,25,26,27,28,29,30,31,41,64,76,80,81,82,83,104,132,],[46,-39,-42,-44,-45,-46,-47,-48,46,46,-43,-37,-38,-40,-41,-34,-35,]),'RPAREN':([25,26,27,28,29,30,31,41,50,51,52,53,54,55,66,67,69,71,72,73,74,75,76,77,80,81,82,83,90,94,104,111,113,114,115,116,117,118,119,120,123,132,137,],[-39,-42,-44,-45,-46,-47,-48,76,85,86,-24,-25,-26,87,91,-51,-53,-27,-28,-29,-30,-31,-43,101,-37,-38,-40,-41,111,-50,-34,-60,-49,-52,-54,-55,-56,-57,-58,-59,131,-35,143,]),'MULT':([25,26,27,28,29,30,31,76,80,81,82,83,104,132,],[47,-42,-44,-45,-46,-47,-48,-43,47,47,-40,-41,-34,-35,]),'DIV':([25,26,27,28,29,30,31,76,80,81,82,83,104,132,],[48,-42,-44,-45,-46,-47,-48,-43,48,48,-40,-41,-34,-35,]),'LBRACK':([31,61,62,75,127,],[49,88,89,49,134,]),'INT':([36,],[57,]),'FLOAT':([36,],[58,]),'VEC':([36,],[61,]),'MAT':([36,],[62,]),'NOT':([40,42,44,65,103,130,],[68,68,68,68,68,68,]),'RBRACK':([52,53,54,71,72,73,74,75,84,104,109,110,124,132,140,],[-24,-25,-26,-27,-28,-29,-30,-31,104,-34,126,127,132,-35,145,]),'COMMA':([52,53,54,67,69,71,72,73,74,75,79,84,94,104,111,113,114,115,116,117,118,119,120,132,],[-24,-25,-26,-51,-53,-27,-28,-29,-30,-31,103,105,-50,-34,-60,-49,-52,-54,-55,-56,-57,-58,-59,-35,]),'OR':([66,67,69,71,72,73,74,75,77,79,90,94,104,111,113,114,115,116,117,118,119,120,123,132,137,],[92,-51,-53,-27,-28,-29,-30,-31,92,92,92,-50,-34,-60,-49,-52,-54,-55,-56,-57,-58,-59,92,-35,92,]),'AND':([67,69,71,72,73,74,75,94,104,111,113,114,115,116,117,118,119,120,132,],[93,-53,-27,-28,-29,-30,-31,93,-34,-60,93,-52,-54,-55,-56,-57,-58,-59,-35,]),'LT':([70,71,72,73,74,75,104,132,],[95,-27,-28,-29,-30,-31,-34,-35,]),'LE':([70,71,72,73,74,75,104,132,],[96,-27,-28,-29,-30,-31,-34,-35,]),'GT':([70,71,72,73,74,75,104,132,],[97,-27,-28,-29,-30,-31,-34,-35,]),'GE':([70,71,72,73,74,75,104,132,],[98,-27,-28,-29,-30,-31,-34,-35,]),'EQ':([70,71,72,73,74,75,104,132,],[99,-27,-28,-29,-30,-31,-34,-35,]),'NE':([70,71,72,73,74,75,104,132,],[100,-27,-28,-29,-30,-31,-34,-35,]),'LCURL':([91,101,131,147,],[112,121,138,152,]),'ELSE':([141,],[147,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'START':([0,],[1,]),'V':([2,12,14,43,85,112,121,138,],[3,35,37,78,106,128,129,144,]),'EMPTY':([2,3,7,12,14,37,43,78,85,86,87,106,112,121,125,128,129,138,142,143,144,146,152,],[6,11,24,6,6,24,6,24,6,24,24,11,6,6,24,24,24,6,24,24,24,24,24,]),'P':([3,106,],[7,125,]),'VARAUX':([4,],[12,]),'VARASSIGN':([5,],[14,]),'VARID':([5,],[15,]),'S':([7,37,78,86,87,125,128,129,142,143,144,146,152,],[17,63,102,107,108,133,135,136,148,149,150,151,154,]),'E':([7,19,37,38,78,86,87,125,128,129,142,143,144,146,152,],[23,41,23,64,23,23,23,23,23,23,23,23,23,23,23,]),'T':([7,19,37,38,45,46,78,86,87,125,128,129,142,143,144,146,152,],[25,25,25,25,80,81,25,25,25,25,25,25,25,25,25,25,25,]),'F':([7,19,37,38,45,46,47,48,78,86,87,125,128,129,142,143,144,146,152,],[26,26,26,26,26,26,82,83,26,26,26,26,26,26,26,26,26,26,26,]),'VECTOR':([7,19,37,38,40,42,44,45,46,47,48,65,68,78,86,87,88,89,92,93,95,96,97,98,99,100,103,125,128,129,130,134,142,143,144,146,152,],[29,29,29,29,73,73,73,29,29,29,29,73,73,29,29,29,73,73,73,73,73,73,73,73,73,73,73,29,29,29,73,73,29,29,29,29,29,]),'MATRIX':([7,19,37,38,40,42,44,45,46,47,48,65,68,78,86,87,88,89,92,93,95,96,97,98,99,100,103,125,128,129,130,134,142,143,144,146,152,],[30,30,30,30,74,74,74,30,30,30,30,74,74,30,30,30,74,74,74,74,74,74,74,74,74,74,74,30,30,30,74,74,30,30,30,30,30,]),'NUMTYPE':([33,34,49,105,],[51,55,84,124,]),'VARTYPE':([36,],[56,]),'VECDEF':([36,],[59,]),'MATDEF':([36,],[60,]),'LOGE':([40,42,44,65,103,130,],[66,77,79,90,123,137,]),'LOGT':([40,42,44,65,68,92,103,130,],[67,67,67,67,94,113,67,67,]),'LOGF':([40,42,44,65,68,92,93,103,130,],[69,69,69,69,69,69,114,69,69,]),'VAR':([40,42,44,65,68,88,89,92,93,95,96,97,98,99,100,103,130,134,],[70,70,70,70,70,109,110,70,70,115,116,117,118,119,120,70,70,140,]),'IFELSE':([141,],[146,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> START","S'",1,None,None,None),
  ('START -> PROGRAM V P S PEND','START',5,'p_START','nebulaSynExpresiones.py',40),
  ('V -> DIM VARAUX V','V',3,'p_V_DIM','nebulaSynExpresiones.py',49),
  ('V -> LET VARASSIGN V S','V',4,'p_V_LET','nebulaSynExpresiones.py',54),
  ('V -> EMPTY','V',1,'p_V_EMPTY','nebulaSynExpresiones.py',59),
  ('P -> SUBPROCEDURE LPAREN ID RPAREN V P S SUBEND','P',8,'p_P_SUB','nebulaSynExpresiones.py',66),
  ('P -> IN LPAREN NUMTYPE RPAREN S','P',5,'p_P_INP','nebulaSynExpresiones.py',71),
  ('P -> PRINT LPAREN NUMTYPE RPAREN S','P',5,'p_P_PRINT','nebulaSynExpresiones.py',76),
  ('P -> EMPTY','P',1,'p_P_EMPTY','nebulaSynExpresiones.py',81),
  ('S -> IF LPAREN LOGE RPAREN LCURL V S RCURL IFELSE S','S',10,'p_S_IF','nebulaSynExpresiones.py',88),
  ('IFELSE -> ELSE LCURL S RCURL','IFELSE',4,'p_S_IFELSE','nebulaSynExpresiones.py',93),
  ('IFELSE -> <empty>','IFELSE',0,'p_S_IFELSE','nebulaSynExpresiones.py',94),
  ('S -> WHILE LPAREN LOGE RPAREN LCURL V S RCURL S','S',9,'p_S_WHILE','nebulaSynExpresiones.py',99),
  ('S -> DO COLON V S WHILE LPAREN LOGE RPAREN S','S',9,'p_S_DO','nebulaSynExpresiones.py',104),
  ('S -> FOR LPAREN LOGE COMMA LOGE RPAREN LCURL V S RCURL','S',10,'p_S_FOR','nebulaSynExpresiones.py',109),
  ('S -> E','S',1,'p_S_OPERATION','nebulaSynExpresiones.py',114),
  ('S -> EMPTY','S',1,'p_S_EMPTY','nebulaSynExpresiones.py',119),
  ('VARAUX -> ID AS VARTYPE','VARAUX',3,'p_VARAUX','nebulaSynExpresiones.py',126),
  ('VARID -> ID','VARID',1,'p_VARID','nebulaSynExpresiones.py',135),
  ('VARASSIGN -> VARID EQUAL E','VARASSIGN',3,'p_VARASSIGN','nebulaSynExpresiones.py',148),
  ('VARTYPE -> INT','VARTYPE',1,'p_VARTYPE','nebulaSynExpresiones.py',171),
  ('VARTYPE -> FLOAT','VARTYPE',1,'p_VARTYPE','nebulaSynExpresiones.py',172),
  ('VARTYPE -> VECDEF','VARTYPE',1,'p_VARTYPE','nebulaSynExpresiones.py',173),
  ('VARTYPE -> MATDEF','VARTYPE',1,'p_VARTYPE','nebulaSynExpresiones.py',174),
  ('NUMTYPE -> ID','NUMTYPE',1,'p_NUMTYPE','nebulaSynExpresiones.py',180),
  ('NUMTYPE -> NINT','NUMTYPE',1,'p_NUMTYPE','nebulaSynExpresiones.py',181),
  ('NUMTYPE -> NFLOAT','NUMTYPE',1,'p_NUMTYPE','nebulaSynExpresiones.py',182),
  ('VAR -> NINT','VAR',1,'p_VAR','nebulaSynExpresiones.py',187),
  ('VAR -> NFLOAT','VAR',1,'p_VAR','nebulaSynExpresiones.py',188),
  ('VAR -> VECTOR','VAR',1,'p_VAR','nebulaSynExpresiones.py',189),
  ('VAR -> MATRIX','VAR',1,'p_VAR','nebulaSynExpresiones.py',190),
  ('VAR -> ID','VAR',1,'p_VAR','nebulaSynExpresiones.py',191),
  ('VECDEF -> VEC LBRACK VAR RBRACK','VECDEF',4,'p_VECDEF','nebulaSynExpresiones.py',204),
  ('MATDEF -> MAT LBRACK VAR RBRACK LBRACK VAR RBRACK','MATDEF',7,'p_MATDEF','nebulaSynExpresiones.py',210),
  ('VECTOR -> ID LBRACK NUMTYPE RBRACK','VECTOR',4,'p_VECTOR','nebulaSynExpresiones.py',216),
  ('MATRIX -> ID LBRACK NUMTYPE COMMA NUMTYPE RBRACK','MATRIX',6,'p_MATRIX','nebulaSynExpresiones.py',221),
  ('EMPTY -> <empty>','EMPTY',0,'p_EMPTY','nebulaSynExpresiones.py',226),
  ('E -> E PLUS T','E',3,'p_E','nebulaSynExpresiones.py',234),
  ('E -> E MINUS T','E',3,'p_E','nebulaSynExpresiones.py',235),
  ('E -> T','E',1,'p_E1','nebulaSynExpresiones.py',242),
  ('T -> T MULT F','T',3,'p_T','nebulaSynExpresiones.py',247),
  ('T -> T DIV F','T',3,'p_T','nebulaSynExpresiones.py',248),
  ('T -> F','T',1,'p_T1','nebulaSynExpresiones.py',255),
  ('F -> LPAREN E RPAREN','F',3,'p_F','nebulaSynExpresiones.py',260),
  ('F -> NINT','F',1,'p_FVAR','nebulaSynExpresiones.py',265),
  ('F -> NFLOAT','F',1,'p_FVAR','nebulaSynExpresiones.py',266),
  ('F -> VECTOR','F',1,'p_FVAR','nebulaSynExpresiones.py',267),
  ('F -> MATRIX','F',1,'p_FVAR','nebulaSynExpresiones.py',268),
  ('F -> ID','F',1,'p_FVAR','nebulaSynExpresiones.py',269),
  ('LOGE -> LOGE OR LOGT','LOGE',3,'p_LOGE','nebulaSynExpresiones.py',289),
  ('LOGE -> NOT LOGT','LOGE',2,'p_LOGE1','nebulaSynExpresiones.py',294),
  ('LOGE -> LOGT','LOGE',1,'p_LOGE1','nebulaSynExpresiones.py',295),
  ('LOGT -> LOGT AND LOGF','LOGT',3,'p_LOGT','nebulaSynExpresiones.py',300),
  ('LOGT -> LOGF','LOGT',1,'p_LOGT1','nebulaSynExpresiones.py',305),
  ('LOGF -> VAR LT VAR','LOGF',3,'p_LOGF_LT','nebulaSynExpresiones.py',310),
  ('LOGF -> VAR LE VAR','LOGF',3,'p_LOGF_LE','nebulaSynExpresiones.py',317),
  ('LOGF -> VAR GT VAR','LOGF',3,'p_LOGF_GT','nebulaSynExpresiones.py',324),
  ('LOGF -> VAR GE VAR','LOGF',3,'p_LOGF_GE','nebulaSynExpresiones.py',331),
  ('LOGF -> VAR EQ VAR','LOGF',3,'p_LOGF_EQ','nebulaSynExpresiones.py',338),
  ('LOGF -> VAR NE VAR','LOGF',3,'p_LOGF_NE','nebulaSynExpresiones.py',345),
  ('LOGF -> LPAREN LOGE RPAREN','LOGF',3,'p_LOGF1','nebulaSynExpresiones.py',352),
]
