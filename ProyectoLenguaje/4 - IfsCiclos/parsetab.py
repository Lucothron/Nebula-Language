
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND APOS AS CALL COMMA CUBE DEF DIV DO ELSE EQ EQUAL FLOAT FOR GE GT ID IF IN INT LBRACK LCURL LE LET LPAREN LT MAT MINUS MULT NE NFLOAT NINT NOT OF OR PEND PLUS PRINT PROCEDURE PROGRAM RBRACK RCURL RPAREN TYPE VEC WHILE\n    START : V PROC PROGRAM X PEND\n    \n    X : V P S\n    \n    V : DEF VARAUX X\n    \n    VARAUX : ID AS VARTYPE\n    \n    V : LET VARASSIGN X\n    \n    VARASSIGN : VARID EQUAL E\n    \n    VARID : ID\n    \n    V : EMPTY\n    \n    P : CALL SUBAUX X\n    \n    SUBAUX : ID\n    \n    PROC : PROCEDURE PROCAUX LCURL X RCURL PROCAUX2 PROC\n    | \n    \n    PROCAUX : ID\n    \n    PROCAUX2 :\n    \n    P : IN INPAUX X\n    \n    INPAUX : LPAREN VARID RPAREN\n    \n    P : PRINT PRINTAUX X\n    \n    PRINTAUX : LPAREN VAR RPAREN\n    \n    PRINTAUX : LPAREN APOS ID APOS RPAREN\n    \n    P : EMPTY\n    \n    S : IF IFAUX LCURL X RCURL IFAUX2 X\n    \n    IFAUX : LPAREN LOGE RPAREN\n    \n    IFAUX2 : IFELSE\n    | IFAUX3\n    \n    IFAUX3 :\n    \n    IFELSE : ELSEAUX LCURL X RCURL IFAUX3\n    \n    ELSEAUX : ELSE\n    \n    S : WHILE WHILEAUX LCURL X RCURL WHILEAUX2 X\n    \n    WHILEAUX : LPAREN LOGE RPAREN\n    \n    WHILEAUX2 : \n    \n    S : DO DOAUX LCURL X RCURL WHILE DOAUX2 X\n    \n    DOAUX : \n    \n    DOAUX2 : LPAREN LOGE RPAREN\n    \n    S : FOR FORAUX LCURL X RCURL FORAUX2 X\n    \n    FORAUX : LPAREN FORASSIGN COMMA LOGE RPAREN\n    \n    FORAUX2 : \n    \n    FORASSIGN : VARID EQUAL E\n    \n    S : E\n    \n    S : EMPTY\n    \n    VARTYPE : INT\n    | FLOAT\n    | VECDEF\n    | MATDEF\n    | CUBEDEF\n    \n    NUMTYPE : ID\n    | NINT\n    | NFLOAT\n    \n    VAR : NINT\n    | NFLOAT\n    | VECTOR\n    | MATRIX\n    | CUBEE\n    | ID\n    \n    DIMTYPE : INT\n    | FLOAT\n    \n    VECDEF : VEC LBRACK NINT RBRACK OF TYPE DIMTYPE\n    \n    MATDEF : MAT LBRACK NINT COMMA NINT RBRACK OF TYPE DIMTYPE\n    \n    CUBEDEF : CUBE LBRACK NINT COMMA NINT COMMA NINT RBRACK OF TYPE DIMTYPE\n    \n    VECTOR : ID LBRACK NUMTYPE RBRACK\n    \n    MATRIX : ID LBRACK NUMTYPE COMMA NUMTYPE RBRACK\n    \n    CUBEE : ID LBRACK NUMTYPE COMMA NUMTYPE COMMA NUMTYPE RBRACK\n    \n    EMPTY : \n    \n    E : E PLUS T\n    | E MINUS T\n    \n    E : T\n    \n    T : T MULT F\n    | T DIV F\n    \n    T : F\n    \n    F : LPAREN E RPAREN\n    \n    F : NINT\n    | VECTOR\n    | MATRIX\n    | CUBEE\n    | ID\n    \n    F : NFLOAT\n    \n    LOGE : LOGE OR LOGT\n    \n    LOGE : NOT LOGT\n    | LOGT\n    \n    LOGT : LOGT AND LOGF\n    \n    LOGT : LOGF\n    \n    LOGF : VAR LT VAR\n    \n    LOGF : VAR LE VAR\n    \n    LOGF : VAR GT VAR\n    \n    LOGF : VAR GE VAR\n    \n    LOGF : VAR EQ VAR\n    \n    LOGF : VAR NE VAR\n    \n    LOGF : LPAREN LOGE RPAREN\n    '
    
_lr_action_items = {'DEF':([0,8,10,13,22,28,29,30,31,32,33,37,38,39,41,42,43,44,45,46,56,57,58,60,94,95,96,97,98,104,111,113,114,117,118,123,149,159,161,164,169,170,171,172,175,177,179,180,181,186,188,193,197,199,200,202,203,],[3,3,3,3,3,-4,-40,-41,-42,-43,-44,-6,-65,-68,-70,-71,-72,-73,-74,-75,3,-10,3,3,-63,-64,-66,-67,-69,3,3,3,3,-16,-18,-59,-25,-30,-36,-19,-60,3,-23,-24,3,3,-56,-54,-55,3,3,-61,-57,-25,-33,-26,-58,]),'LET':([0,8,10,13,22,28,29,30,31,32,33,37,38,39,41,42,43,44,45,46,56,57,58,60,94,95,96,97,98,104,111,113,114,117,118,123,149,159,161,164,169,170,171,172,175,177,179,180,181,186,188,193,197,199,200,202,203,],[4,4,4,4,4,-4,-40,-41,-42,-43,-44,-6,-65,-68,-70,-71,-72,-73,-74,-75,4,-10,4,4,-63,-64,-66,-67,-69,4,4,4,4,-16,-18,-59,-25,-30,-36,-19,-60,4,-23,-24,4,4,-56,-54,-55,4,4,-61,-57,-25,-33,-26,-58,]),'PROCEDURE':([0,2,5,8,10,16,17,19,23,27,28,29,30,31,32,33,37,38,39,41,42,43,44,45,46,49,54,55,56,57,58,60,71,79,80,82,94,95,96,97,98,103,117,118,123,149,159,161,164,169,170,171,172,175,177,179,180,181,185,187,188,190,193,195,197,199,200,202,203,],[-62,7,-8,-62,-62,-3,-62,-5,-62,-20,-4,-40,-41,-42,-43,-44,-6,-65,-68,-70,-71,-72,-73,-74,-75,-2,-38,-39,-62,-10,-62,-62,-14,-9,-15,-17,-63,-64,-66,-67,-69,7,-16,-18,-59,-25,-30,-36,-19,-60,-62,-23,-24,-62,-62,-56,-54,-55,-21,-28,-62,-34,-61,-31,-57,-25,-33,-26,-58,]),'PROGRAM':([0,2,5,6,8,10,16,17,19,23,27,28,29,30,31,32,33,37,38,39,41,42,43,44,45,46,49,54,55,56,57,58,60,71,79,80,82,94,95,96,97,98,103,117,118,123,125,149,159,161,164,169,170,171,172,175,177,179,180,181,185,187,188,190,193,195,197,199,200,202,203,],[-62,-12,-8,13,-62,-62,-3,-62,-5,-62,-20,-4,-40,-41,-42,-43,-44,-6,-65,-68,-70,-71,-72,-73,-74,-75,-2,-38,-39,-62,-10,-62,-62,-14,-9,-15,-17,-63,-64,-66,-67,-69,-12,-16,-18,-59,-11,-25,-30,-36,-19,-60,-62,-23,-24,-62,-62,-56,-54,-55,-21,-28,-62,-34,-61,-31,-57,-25,-33,-26,-58,]),'$end':([1,47,],[0,-1,]),'ID':([3,4,5,7,8,10,13,16,17,19,20,22,23,24,27,28,29,30,31,32,33,37,38,39,40,41,42,43,44,45,46,49,54,55,56,57,58,59,60,61,65,66,67,68,70,73,75,78,79,80,82,84,94,95,96,97,98,104,105,108,111,113,114,117,118,123,124,129,130,132,133,134,135,136,137,142,143,149,159,161,164,168,169,170,171,172,175,177,179,180,181,185,186,187,188,189,190,193,195,197,199,200,202,203,],[9,12,-8,15,-62,-62,-62,-3,-62,-5,45,-62,45,57,-20,-4,-40,-41,-42,-43,-44,-6,-65,-68,45,-70,-71,-72,-73,-74,-75,-2,-38,-39,-62,-10,-62,12,-62,85,45,45,45,45,99,85,85,12,-9,-15,-17,119,-63,-64,-66,-67,-69,-62,85,85,-62,-62,-62,-16,-18,-59,99,85,85,85,85,85,85,85,85,85,45,-25,-30,-36,-19,99,-60,-62,-23,-24,-62,-62,-56,-54,-55,-21,-62,-28,-62,85,-34,-61,-31,-57,-25,-33,-26,-58,]),'CALL':([5,8,10,13,16,17,19,22,23,27,28,29,30,31,32,33,37,38,39,41,42,43,44,45,46,49,54,55,56,57,58,60,79,80,82,94,95,96,97,98,104,111,113,114,117,118,123,149,159,161,164,169,170,171,172,175,177,179,180,181,185,186,187,188,190,193,195,197,199,200,202,203,],[-8,-62,-62,-62,-3,24,-5,-62,-62,-20,-4,-40,-41,-42,-43,-44,-6,-65,-68,-70,-71,-72,-73,-74,-75,-2,-38,-39,-62,-10,-62,-62,-9,-15,-17,-63,-64,-66,-67,-69,-62,-62,-62,-62,-16,-18,-59,-25,-30,-36,-19,-60,-62,-23,-24,-62,-62,-56,-54,-55,-21,-62,-28,-62,-34,-61,-31,-57,-25,-33,-26,-58,]),'IN':([5,8,10,13,16,17,19,22,23,27,28,29,30,31,32,33,37,38,39,41,42,43,44,45,46,49,54,55,56,57,58,60,79,80,82,94,95,96,97,98,104,111,113,114,117,118,123,149,159,161,164,169,170,171,172,175,177,179,180,181,185,186,187,188,190,193,195,197,199,200,202,203,],[-8,-62,-62,-62,-3,25,-5,-62,-62,-20,-4,-40,-41,-42,-43,-44,-6,-65,-68,-70,-71,-72,-73,-74,-75,-2,-38,-39,-62,-10,-62,-62,-9,-15,-17,-63,-64,-66,-67,-69,-62,-62,-62,-62,-16,-18,-59,-25,-30,-36,-19,-60,-62,-23,-24,-62,-62,-56,-54,-55,-21,-62,-28,-62,-34,-61,-31,-57,-25,-33,-26,-58,]),'PRINT':([5,8,10,13,16,17,19,22,23,27,28,29,30,31,32,33,37,38,39,41,42,43,44,45,46,49,54,55,56,57,58,60,79,80,82,94,95,96,97,98,104,111,113,114,117,118,123,149,159,161,164,169,170,171,172,175,177,179,180,181,185,186,187,188,190,193,195,197,199,200,202,203,],[-8,-62,-62,-62,-3,26,-5,-62,-62,-20,-4,-40,-41,-42,-43,-44,-6,-65,-68,-70,-71,-72,-73,-74,-75,-2,-38,-39,-62,-10,-62,-62,-9,-15,-17,-63,-64,-66,-67,-69,-62,-62,-62,-62,-16,-18,-59,-25,-30,-36,-19,-60,-62,-23,-24,-62,-62,-56,-54,-55,-21,-62,-28,-62,-34,-61,-31,-57,-25,-33,-26,-58,]),'IF':([5,8,10,13,16,17,19,22,23,27,28,29,30,31,32,33,37,38,39,41,42,43,44,45,46,49,54,55,56,57,58,60,79,80,82,94,95,96,97,98,104,111,113,114,117,118,123,149,159,161,164,169,170,171,172,175,177,179,180,181,185,186,187,188,190,193,195,197,199,200,202,203,],[-8,-62,-62,-62,-3,-62,-5,-62,50,-20,-4,-40,-41,-42,-43,-44,-6,-65,-68,-70,-71,-72,-73,-74,-75,-2,-38,-39,-62,-10,-62,-62,-9,-15,-17,-63,-64,-66,-67,-69,-62,-62,-62,-62,-16,-18,-59,-25,-30,-36,-19,-60,-62,-23,-24,-62,-62,-56,-54,-55,-21,-62,-28,-62,-34,-61,-31,-57,-25,-33,-26,-58,]),'WHILE':([5,8,10,13,16,17,19,22,23,27,28,29,30,31,32,33,37,38,39,41,42,43,44,45,46,49,54,55,56,57,58,60,79,80,82,94,95,96,97,98,104,111,113,114,117,118,123,149,159,160,161,164,169,170,171,172,175,177,179,180,181,185,186,187,188,190,193,195,197,199,200,202,203,],[-8,-62,-62,-62,-3,-62,-5,-62,51,-20,-4,-40,-41,-42,-43,-44,-6,-65,-68,-70,-71,-72,-73,-74,-75,-2,-38,-39,-62,-10,-62,-62,-9,-15,-17,-63,-64,-66,-67,-69,-62,-62,-62,-62,-16,-18,-59,-25,-30,176,-36,-19,-60,-62,-23,-24,-62,-62,-56,-54,-55,-21,-62,-28,-62,-34,-61,-31,-57,-25,-33,-26,-58,]),'DO':([5,8,10,13,16,17,19,22,23,27,28,29,30,31,32,33,37,38,39,41,42,43,44,45,46,49,54,55,56,57,58,60,79,80,82,94,95,96,97,98,104,111,113,114,117,118,123,149,159,161,164,169,170,171,172,175,177,179,180,181,185,186,187,188,190,193,195,197,199,200,202,203,],[-8,-62,-62,-62,-3,-62,-5,-62,52,-20,-4,-40,-41,-42,-43,-44,-6,-65,-68,-70,-71,-72,-73,-74,-75,-2,-38,-39,-62,-10,-62,-62,-9,-15,-17,-63,-64,-66,-67,-69,-62,-62,-62,-62,-16,-18,-59,-25,-30,-36,-19,-60,-62,-23,-24,-62,-62,-56,-54,-55,-21,-62,-28,-62,-34,-61,-31,-57,-25,-33,-26,-58,]),'FOR':([5,8,10,13,16,17,19,22,23,27,28,29,30,31,32,33,37,38,39,41,42,43,44,45,46,49,54,55,56,57,58,60,79,80,82,94,95,96,97,98,104,111,113,114,117,118,123,149,159,161,164,169,170,171,172,175,177,179,180,181,185,186,187,188,190,193,195,197,199,200,202,203,],[-8,-62,-62,-62,-3,-62,-5,-62,53,-20,-4,-40,-41,-42,-43,-44,-6,-65,-68,-70,-71,-72,-73,-74,-75,-2,-38,-39,-62,-10,-62,-62,-9,-15,-17,-63,-64,-66,-67,-69,-62,-62,-62,-62,-16,-18,-59,-25,-30,-36,-19,-60,-62,-23,-24,-62,-62,-56,-54,-55,-21,-62,-28,-62,-34,-61,-31,-57,-25,-33,-26,-58,]),'LPAREN':([5,8,10,13,16,17,19,20,22,23,25,26,27,28,29,30,31,32,33,37,38,39,40,41,42,43,44,45,46,49,50,51,53,54,55,56,57,58,60,65,66,67,68,73,75,79,80,82,94,95,96,97,98,104,105,108,111,113,114,117,118,123,129,130,142,143,149,159,161,164,169,170,171,172,175,176,177,179,180,181,185,186,187,188,189,190,193,195,197,199,200,202,203,],[-8,-62,-62,-62,-3,-62,-5,40,-62,40,59,61,-20,-4,-40,-41,-42,-43,-44,-6,-65,-68,40,-70,-71,-72,-73,-74,-75,-2,73,75,78,-38,-39,-62,-10,-62,-62,40,40,40,40,105,105,-9,-15,-17,-63,-64,-66,-67,-69,-62,105,105,-62,-62,-62,-16,-18,-59,105,105,105,40,-25,-30,-36,-19,-60,-62,-23,-24,-62,189,-62,-56,-54,-55,-21,-62,-28,-62,105,-34,-61,-31,-57,-25,-33,-26,-58,]),'NINT':([5,8,10,13,16,17,19,20,22,23,27,28,29,30,31,32,33,37,38,39,40,41,42,43,44,45,46,49,54,55,56,57,58,60,61,62,63,64,65,66,67,68,70,73,75,79,80,82,94,95,96,97,98,104,105,108,111,113,114,117,118,121,122,123,124,129,130,132,133,134,135,136,137,142,143,149,159,161,164,167,168,169,170,171,172,175,177,179,180,181,185,186,187,188,189,190,193,195,197,199,200,202,203,],[-8,-62,-62,-62,-3,-62,-5,41,-62,41,-20,-4,-40,-41,-42,-43,-44,-6,-65,-68,41,-70,-71,-72,-73,-74,-75,-2,-38,-39,-62,-10,-62,-62,86,91,92,93,41,41,41,41,101,86,86,-9,-15,-17,-63,-64,-66,-67,-69,-62,86,86,-62,-62,-62,-16,-18,146,147,-59,101,86,86,86,86,86,86,86,86,86,41,-25,-30,-36,-19,183,101,-60,-62,-23,-24,-62,-62,-56,-54,-55,-21,-62,-28,-62,86,-34,-61,-31,-57,-25,-33,-26,-58,]),'NFLOAT':([5,8,10,13,16,17,19,20,22,23,27,28,29,30,31,32,33,37,38,39,40,41,42,43,44,45,46,49,54,55,56,57,58,60,61,65,66,67,68,70,73,75,79,80,82,94,95,96,97,98,104,105,108,111,113,114,117,118,123,124,129,130,132,133,134,135,136,137,142,143,149,159,161,164,168,169,170,171,172,175,177,179,180,181,185,186,187,188,189,190,193,195,197,199,200,202,203,],[-8,-62,-62,-62,-3,-62,-5,46,-62,46,-20,-4,-40,-41,-42,-43,-44,-6,-65,-68,46,-70,-71,-72,-73,-74,-75,-2,-38,-39,-62,-10,-62,-62,87,46,46,46,46,102,87,87,-9,-15,-17,-63,-64,-66,-67,-69,-62,87,87,-62,-62,-62,-16,-18,-59,102,87,87,87,87,87,87,87,87,87,46,-25,-30,-36,-19,102,-60,-62,-23,-24,-62,-62,-56,-54,-55,-21,-62,-28,-62,87,-34,-61,-31,-57,-25,-33,-26,-58,]),'PEND':([5,8,10,13,16,17,19,21,23,27,28,29,30,31,32,33,37,38,39,41,42,43,44,45,46,49,54,55,56,57,58,60,79,80,82,94,95,96,97,98,117,118,123,149,159,161,164,169,170,171,172,175,177,179,180,181,185,187,188,190,193,195,197,199,200,202,203,],[-8,-62,-62,-62,-3,-62,-5,47,-62,-20,-4,-40,-41,-42,-43,-44,-6,-65,-68,-70,-71,-72,-73,-74,-75,-2,-38,-39,-62,-10,-62,-62,-9,-15,-17,-63,-64,-66,-67,-69,-16,-18,-59,-25,-30,-36,-19,-60,-62,-23,-24,-62,-62,-56,-54,-55,-21,-28,-62,-34,-61,-31,-57,-25,-33,-26,-58,]),'RCURL':([5,8,10,16,17,19,22,23,27,28,29,30,31,32,33,37,38,39,41,42,43,44,45,46,48,49,54,55,56,57,58,60,79,80,82,94,95,96,97,98,104,111,113,114,117,118,123,126,138,140,141,149,159,161,164,169,170,171,172,175,177,179,180,181,185,186,187,188,190,193,194,195,197,199,200,202,203,],[-8,-62,-62,-3,-62,-5,-62,-62,-20,-4,-40,-41,-42,-43,-44,-6,-65,-68,-70,-71,-72,-73,-74,-75,71,-2,-38,-39,-62,-10,-62,-62,-9,-15,-17,-63,-64,-66,-67,-69,-62,-62,-62,-62,-16,-18,-59,149,159,160,161,-25,-30,-36,-19,-60,-62,-23,-24,-62,-62,-56,-54,-55,-21,-62,-28,-62,-34,-61,199,-31,-57,-25,-33,-26,-58,]),'AS':([9,],[18,]),'EQUAL':([11,12,116,],[20,-7,143,]),'RPAREN':([12,38,39,41,42,43,44,45,46,69,81,83,85,86,87,88,89,90,94,95,96,97,98,106,107,109,112,123,127,131,144,150,151,152,153,154,155,156,157,158,162,169,193,196,],[-7,-65,-68,-70,-71,-72,-73,-74,-75,98,117,118,-53,-48,-49,-50,-51,-52,-63,-64,-66,-67,-69,128,-78,-80,139,-59,150,-77,164,-87,-76,-79,-81,-82,-83,-84,-85,-86,178,-60,-61,200,]),'LCURL':([14,15,52,72,74,76,77,128,139,173,174,178,],[22,-13,-32,104,111,113,114,-22,-29,186,-27,-35,]),'INT':([18,165,191,201,],[29,180,180,180,]),'FLOAT':([18,165,191,201,],[30,181,181,181,]),'VEC':([18,],[34,]),'MAT':([18,],[35,]),'CUBE':([18,],[36,]),'LBRACK':([34,35,36,45,85,],[62,63,64,70,70,]),'PLUS':([37,38,39,41,42,43,44,45,46,54,69,94,95,96,97,98,123,163,169,193,],[65,-65,-68,-70,-71,-72,-73,-74,-75,65,65,-63,-64,-66,-67,-69,-59,65,-60,-61,]),'MINUS':([37,38,39,41,42,43,44,45,46,54,69,94,95,96,97,98,123,163,169,193,],[66,-65,-68,-70,-71,-72,-73,-74,-75,66,66,-63,-64,-66,-67,-69,-59,66,-60,-61,]),'COMMA':([38,39,41,42,43,44,45,46,92,93,94,95,96,97,98,99,100,101,102,115,123,147,148,163,169,193,],[-65,-68,-70,-71,-72,-73,-74,-75,121,122,-63,-64,-66,-67,-69,-45,124,-46,-47,142,-59,167,168,-37,-60,-61,]),'MULT':([38,39,41,42,43,44,45,46,94,95,96,97,98,123,169,193,],[67,-68,-70,-71,-72,-73,-74,-75,67,67,-66,-67,-69,-59,-60,-61,]),'DIV':([38,39,41,42,43,44,45,46,94,95,96,97,98,123,169,193,],[68,-68,-70,-71,-72,-73,-74,-75,68,68,-66,-67,-69,-59,-60,-61,]),'APOS':([61,119,],[84,144,]),'NOT':([73,75,105,142,189,],[108,108,108,108,108,]),'LT':([85,86,87,88,89,90,110,123,169,193,],[-53,-48,-49,-50,-51,-52,132,-59,-60,-61,]),'LE':([85,86,87,88,89,90,110,123,169,193,],[-53,-48,-49,-50,-51,-52,133,-59,-60,-61,]),'GT':([85,86,87,88,89,90,110,123,169,193,],[-53,-48,-49,-50,-51,-52,134,-59,-60,-61,]),'GE':([85,86,87,88,89,90,110,123,169,193,],[-53,-48,-49,-50,-51,-52,135,-59,-60,-61,]),'EQ':([85,86,87,88,89,90,110,123,169,193,],[-53,-48,-49,-50,-51,-52,136,-59,-60,-61,]),'NE':([85,86,87,88,89,90,110,123,169,193,],[-53,-48,-49,-50,-51,-52,137,-59,-60,-61,]),'AND':([85,86,87,88,89,90,107,109,123,131,150,151,152,153,154,155,156,157,158,169,193,],[-53,-48,-49,-50,-51,-52,130,-80,-59,130,-87,130,-79,-81,-82,-83,-84,-85,-86,-60,-61,]),'OR':([85,86,87,88,89,90,106,107,109,112,123,127,131,150,151,152,153,154,155,156,157,158,162,169,193,196,],[-53,-48,-49,-50,-51,-52,129,-78,-80,129,-59,129,-77,-87,-76,-79,-81,-82,-83,-84,-85,-86,129,-60,-61,129,]),'RBRACK':([91,99,100,101,102,146,148,183,184,],[120,-45,123,-46,-47,166,169,192,193,]),'OF':([120,166,192,],[145,182,198,]),'TYPE':([145,182,198,],[165,191,201,]),'ELSE':([149,],[174,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'START':([0,],[1,]),'V':([0,8,10,13,22,56,58,60,104,111,113,114,170,175,177,186,188,],[2,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'EMPTY':([0,8,10,13,17,22,23,56,58,60,104,111,113,114,170,175,177,186,188,],[5,5,5,5,27,5,55,5,5,5,5,5,5,5,5,5,5,5,5,]),'PROC':([2,103,],[6,125,]),'VARAUX':([3,],[8,]),'VARASSIGN':([4,],[10,]),'VARID':([4,59,78,],[11,81,116,]),'PROCAUX':([7,],[14,]),'X':([8,10,13,22,56,58,60,104,111,113,114,170,175,177,186,188,],[16,19,21,48,79,80,82,126,138,140,141,185,187,190,194,195,]),'P':([17,],[23,]),'VARTYPE':([18,],[28,]),'VECDEF':([18,],[31,]),'MATDEF':([18,],[32,]),'CUBEDEF':([18,],[33,]),'E':([20,23,40,143,],[37,54,69,163,]),'T':([20,23,40,65,66,143,],[38,38,38,94,95,38,]),'F':([20,23,40,65,66,67,68,143,],[39,39,39,39,39,96,97,39,]),'VECTOR':([20,23,40,61,65,66,67,68,73,75,105,108,129,130,132,133,134,135,136,137,142,143,189,],[42,42,42,88,42,42,42,42,88,88,88,88,88,88,88,88,88,88,88,88,88,42,88,]),'MATRIX':([20,23,40,61,65,66,67,68,73,75,105,108,129,130,132,133,134,135,136,137,142,143,189,],[43,43,43,89,43,43,43,43,89,89,89,89,89,89,89,89,89,89,89,89,89,43,89,]),'CUBEE':([20,23,40,61,65,66,67,68,73,75,105,108,129,130,132,133,134,135,136,137,142,143,189,],[44,44,44,90,44,44,44,44,90,90,90,90,90,90,90,90,90,90,90,90,90,44,90,]),'S':([23,],[49,]),'SUBAUX':([24,],[56,]),'INPAUX':([25,],[58,]),'PRINTAUX':([26,],[60,]),'IFAUX':([50,],[72,]),'WHILEAUX':([51,],[74,]),'DOAUX':([52,],[76,]),'FORAUX':([53,],[77,]),'VAR':([61,73,75,105,108,129,130,132,133,134,135,136,137,142,189,],[83,110,110,110,110,110,110,153,154,155,156,157,158,110,110,]),'NUMTYPE':([70,124,168,],[100,148,184,]),'PROCAUX2':([71,],[103,]),'LOGE':([73,75,105,142,189,],[106,112,127,162,196,]),'LOGT':([73,75,105,108,129,142,189,],[107,107,107,131,151,107,107,]),'LOGF':([73,75,105,108,129,130,142,189,],[109,109,109,109,109,152,109,109,]),'FORASSIGN':([78,],[115,]),'IFAUX2':([149,],[170,]),'IFELSE':([149,],[171,]),'IFAUX3':([149,199,],[172,202,]),'ELSEAUX':([149,],[173,]),'WHILEAUX2':([159,],[175,]),'FORAUX2':([161,],[177,]),'DIMTYPE':([165,191,201,],[179,197,203,]),'DOAUX2':([176,],[188,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> START","S'",1,None,None,None),
  ('START -> V PROC PROGRAM X PEND','START',5,'p_START','nebulaSynIfCiclos.py',21),
  ('X -> V P S','X',3,'p_X','nebulaSynIfCiclos.py',34),
  ('V -> DEF VARAUX X','V',3,'p_V_DEF','nebulaSynIfCiclos.py',39),
  ('VARAUX -> ID AS VARTYPE','VARAUX',3,'p_VARAUX','nebulaSynIfCiclos.py',44),
  ('V -> LET VARASSIGN X','V',3,'p_V_LET','nebulaSynIfCiclos.py',55),
  ('VARASSIGN -> VARID EQUAL E','VARASSIGN',3,'p_VARASSIGN','nebulaSynIfCiclos.py',60),
  ('VARID -> ID','VARID',1,'p_VARID','nebulaSynIfCiclos.py',67),
  ('V -> EMPTY','V',1,'p_V_EMPTY','nebulaSynIfCiclos.py',80),
  ('P -> CALL SUBAUX X','P',3,'p_P_SUB','nebulaSynIfCiclos.py',87),
  ('SUBAUX -> ID','SUBAUX',1,'p_SUBAUX','nebulaSynIfCiclos.py',92),
  ('PROC -> PROCEDURE PROCAUX LCURL X RCURL PROCAUX2 PROC','PROC',7,'p_PROC','nebulaSynIfCiclos.py',98),
  ('PROC -> <empty>','PROC',0,'p_PROC','nebulaSynIfCiclos.py',99),
  ('PROCAUX -> ID','PROCAUX',1,'p_PROCAUX','nebulaSynIfCiclos.py',104),
  ('PROCAUX2 -> <empty>','PROCAUX2',0,'p_PROCAUX2','nebulaSynIfCiclos.py',110),
  ('P -> IN INPAUX X','P',3,'p_P_INP','nebulaSynIfCiclos.py',116),
  ('INPAUX -> LPAREN VARID RPAREN','INPAUX',3,'p_INPAUX','nebulaSynIfCiclos.py',121),
  ('P -> PRINT PRINTAUX X','P',3,'p_P_PRINT','nebulaSynIfCiclos.py',127),
  ('PRINTAUX -> LPAREN VAR RPAREN','PRINTAUX',3,'p_PRINTAUX','nebulaSynIfCiclos.py',132),
  ('PRINTAUX -> LPAREN APOS ID APOS RPAREN','PRINTAUX',5,'p_PRINTAUX2','nebulaSynIfCiclos.py',138),
  ('P -> EMPTY','P',1,'p_P_EMPTY','nebulaSynIfCiclos.py',144),
  ('S -> IF IFAUX LCURL X RCURL IFAUX2 X','S',7,'p_S_IF','nebulaSynIfCiclos.py',151),
  ('IFAUX -> LPAREN LOGE RPAREN','IFAUX',3,'p_IFAUX','nebulaSynIfCiclos.py',156),
  ('IFAUX2 -> IFELSE','IFAUX2',1,'p_IFAUX2','nebulaSynIfCiclos.py',162),
  ('IFAUX2 -> IFAUX3','IFAUX2',1,'p_IFAUX2','nebulaSynIfCiclos.py',163),
  ('IFAUX3 -> <empty>','IFAUX3',0,'p_IFAUX3','nebulaSynIfCiclos.py',168),
  ('IFELSE -> ELSEAUX LCURL X RCURL IFAUX3','IFELSE',5,'p_S_IFELSE','nebulaSynIfCiclos.py',174),
  ('ELSEAUX -> ELSE','ELSEAUX',1,'p_ELSEAUX','nebulaSynIfCiclos.py',179),
  ('S -> WHILE WHILEAUX LCURL X RCURL WHILEAUX2 X','S',7,'p_S_WHILE','nebulaSynIfCiclos.py',185),
  ('WHILEAUX -> LPAREN LOGE RPAREN','WHILEAUX',3,'p_WHILEAUX','nebulaSynIfCiclos.py',190),
  ('WHILEAUX2 -> <empty>','WHILEAUX2',0,'p_WHILEAUX2','nebulaSynIfCiclos.py',197),
  ('S -> DO DOAUX LCURL X RCURL WHILE DOAUX2 X','S',8,'p_S_DO','nebulaSynIfCiclos.py',203),
  ('DOAUX -> <empty>','DOAUX',0,'p_DOAUX','nebulaSynIfCiclos.py',208),
  ('DOAUX2 -> LPAREN LOGE RPAREN','DOAUX2',3,'p_DOAUX2','nebulaSynIfCiclos.py',214),
  ('S -> FOR FORAUX LCURL X RCURL FORAUX2 X','S',7,'p_S_FOR','nebulaSynIfCiclos.py',220),
  ('FORAUX -> LPAREN FORASSIGN COMMA LOGE RPAREN','FORAUX',5,'p_FORAUX','nebulaSynIfCiclos.py',225),
  ('FORAUX2 -> <empty>','FORAUX2',0,'p_FORAUX2','nebulaSynIfCiclos.py',231),
  ('FORASSIGN -> VARID EQUAL E','FORASSIGN',3,'p_FORASSIGN','nebulaSynIfCiclos.py',237),
  ('S -> E','S',1,'p_S_OPERATION','nebulaSynIfCiclos.py',243),
  ('S -> EMPTY','S',1,'p_S_EMPTY','nebulaSynIfCiclos.py',248),
  ('VARTYPE -> INT','VARTYPE',1,'p_VARTYPE','nebulaSynIfCiclos.py',255),
  ('VARTYPE -> FLOAT','VARTYPE',1,'p_VARTYPE','nebulaSynIfCiclos.py',256),
  ('VARTYPE -> VECDEF','VARTYPE',1,'p_VARTYPE','nebulaSynIfCiclos.py',257),
  ('VARTYPE -> MATDEF','VARTYPE',1,'p_VARTYPE','nebulaSynIfCiclos.py',258),
  ('VARTYPE -> CUBEDEF','VARTYPE',1,'p_VARTYPE','nebulaSynIfCiclos.py',259),
  ('NUMTYPE -> ID','NUMTYPE',1,'p_NUMTYPE','nebulaSynIfCiclos.py',265),
  ('NUMTYPE -> NINT','NUMTYPE',1,'p_NUMTYPE','nebulaSynIfCiclos.py',266),
  ('NUMTYPE -> NFLOAT','NUMTYPE',1,'p_NUMTYPE','nebulaSynIfCiclos.py',267),
  ('VAR -> NINT','VAR',1,'p_VAR','nebulaSynIfCiclos.py',272),
  ('VAR -> NFLOAT','VAR',1,'p_VAR','nebulaSynIfCiclos.py',273),
  ('VAR -> VECTOR','VAR',1,'p_VAR','nebulaSynIfCiclos.py',274),
  ('VAR -> MATRIX','VAR',1,'p_VAR','nebulaSynIfCiclos.py',275),
  ('VAR -> CUBEE','VAR',1,'p_VAR','nebulaSynIfCiclos.py',276),
  ('VAR -> ID','VAR',1,'p_VAR','nebulaSynIfCiclos.py',277),
  ('DIMTYPE -> INT','DIMTYPE',1,'p_DIMTYPE','nebulaSynIfCiclos.py',290),
  ('DIMTYPE -> FLOAT','DIMTYPE',1,'p_DIMTYPE','nebulaSynIfCiclos.py',291),
  ('VECDEF -> VEC LBRACK NINT RBRACK OF TYPE DIMTYPE','VECDEF',7,'p_VECDEF','nebulaSynIfCiclos.py',298),
  ('MATDEF -> MAT LBRACK NINT COMMA NINT RBRACK OF TYPE DIMTYPE','MATDEF',9,'p_MATDEF','nebulaSynIfCiclos.py',304),
  ('CUBEDEF -> CUBE LBRACK NINT COMMA NINT COMMA NINT RBRACK OF TYPE DIMTYPE','CUBEDEF',11,'p_CUBEDEF','nebulaSynIfCiclos.py',310),
  ('VECTOR -> ID LBRACK NUMTYPE RBRACK','VECTOR',4,'p_VECTOR','nebulaSynIfCiclos.py',316),
  ('MATRIX -> ID LBRACK NUMTYPE COMMA NUMTYPE RBRACK','MATRIX',6,'p_MATRIX','nebulaSynIfCiclos.py',321),
  ('CUBEE -> ID LBRACK NUMTYPE COMMA NUMTYPE COMMA NUMTYPE RBRACK','CUBEE',8,'p_CUBE','nebulaSynIfCiclos.py',326),
  ('EMPTY -> <empty>','EMPTY',0,'p_EMPTY','nebulaSynIfCiclos.py',331),
  ('E -> E PLUS T','E',3,'p_E','nebulaSynIfCiclos.py',339),
  ('E -> E MINUS T','E',3,'p_E','nebulaSynIfCiclos.py',340),
  ('E -> T','E',1,'p_E1','nebulaSynIfCiclos.py',347),
  ('T -> T MULT F','T',3,'p_T','nebulaSynIfCiclos.py',352),
  ('T -> T DIV F','T',3,'p_T','nebulaSynIfCiclos.py',353),
  ('T -> F','T',1,'p_T1','nebulaSynIfCiclos.py',360),
  ('F -> LPAREN E RPAREN','F',3,'p_F','nebulaSynIfCiclos.py',365),
  ('F -> NINT','F',1,'p_FVAR','nebulaSynIfCiclos.py',370),
  ('F -> VECTOR','F',1,'p_FVAR','nebulaSynIfCiclos.py',371),
  ('F -> MATRIX','F',1,'p_FVAR','nebulaSynIfCiclos.py',372),
  ('F -> CUBEE','F',1,'p_FVAR','nebulaSynIfCiclos.py',373),
  ('F -> ID','F',1,'p_FVAR','nebulaSynIfCiclos.py',374),
  ('F -> NFLOAT','F',1,'p_VARF','nebulaSynIfCiclos.py',388),
  ('LOGE -> LOGE OR LOGT','LOGE',3,'p_LOGE','nebulaSynIfCiclos.py',399),
  ('LOGE -> NOT LOGT','LOGE',2,'p_LOGE1','nebulaSynIfCiclos.py',404),
  ('LOGE -> LOGT','LOGE',1,'p_LOGE1','nebulaSynIfCiclos.py',405),
  ('LOGT -> LOGT AND LOGF','LOGT',3,'p_LOGT','nebulaSynIfCiclos.py',410),
  ('LOGT -> LOGF','LOGT',1,'p_LOGT1','nebulaSynIfCiclos.py',415),
  ('LOGF -> VAR LT VAR','LOGF',3,'p_LOGF_LT','nebulaSynIfCiclos.py',420),
  ('LOGF -> VAR LE VAR','LOGF',3,'p_LOGF_LE','nebulaSynIfCiclos.py',427),
  ('LOGF -> VAR GT VAR','LOGF',3,'p_LOGF_GT','nebulaSynIfCiclos.py',434),
  ('LOGF -> VAR GE VAR','LOGF',3,'p_LOGF_GE','nebulaSynIfCiclos.py',441),
  ('LOGF -> VAR EQ VAR','LOGF',3,'p_LOGF_EQ','nebulaSynIfCiclos.py',448),
  ('LOGF -> VAR NE VAR','LOGF',3,'p_LOGF_NE','nebulaSynIfCiclos.py',455),
  ('LOGF -> LPAREN LOGE RPAREN','LOGF',3,'p_LOGF1','nebulaSynIfCiclos.py',462),
]
